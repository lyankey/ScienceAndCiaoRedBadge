@model  RedBadgeProject.Models.IndexViewModel
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{


    @Html.AntiForgeryToken()

    <div>
        <h3>Change Your Account Settings</h3>
        <hr />
        @* in case  *@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @* user id hidden field *@
        @Html.HiddenFor(m => m.Id)
        <div class="form-horizontal">
            <div class="form-border">

                <div class="form-group">
                    @Html.LabelFor(m => m.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @* the quotes just let the default error message pass through *@
                        @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.BirthDate, "{0:MM/dd/yyyy}", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.BirthDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                @* need to keep from changing this --- Tried to make this a disabled fieldset but it keeps glitching because membership type is required. 
                    Finally I just commented it out. It seems to work ok but I'm not sure what will happen later.   *@
                @*<fieldset disabled>
                    <div class="form-group">
                        @Html.LabelFor(m => m.MembershipTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.MembershipTypeId, new SelectList(Model.MembershipTypes, "id", "name"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MembershipTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>*@
                <br />
                <div class="col-md-offset-2">
                    <a type="button" class="btn btn-sm btn-primary" href="@Url.Action("Index")">
                        <span class="glyphicon glyphicon-list"></span>
                        <span>Back To Profile</span>
                    </a>
                    @* after updating this, make changes to the manageController *@
                    <input type="submit" value="Update Details" class="btn btn-sm btn-success" />
                </div>
            </div>
            </div>
        </div>

}
